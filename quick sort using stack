#include<iostream.h>
#include<conio.h>
#define max 10
int stack[max],top,;
int push()
	{
	 if(top==max)
	 {
	  cout<<"Over flow";
	  return 0;
	 }
	 int item;
	 cout<<"Enter the Number ";
	 cin>>item;
	 top=top+1;
	 stack[top]=item;
	 return 1;
 }
int pop()
{
  if(top==0)
  {
   cout<<"Undeflow ";
   return 0;
  }
  top=top-1;
  return 1;
}
int disp()
{
 if(top==0)
 {
   cout<<"No stack exist";
   return 0;
 }
 else
 {
  int n=1;
  while(n-1!=top)
  {
    cout<<"Element is "<<stack[n]<<endl;
    n++;
  }
  return 1;
 }
}

int main()
{
 int n,j;
 clrscr();
 cout<<"Enter the number of elements";
 cin>>n;
 while(n!=0)
 {
   j=push();
	    if(j==0)
	    {
		   cout<<endl<<"Task was unsucessfull"<<endl;
	    }
	   else
	  {
		    cout<<endl<<"complited"<<endl;
	  }
   n--;
 }

 while(1)
 {
   cout<<"1.TO push()"<<endl;
   cout<<"2.TO pop()"<<endl;
   cout<<"3.Quick sort"<<endl;
   cout<<"4.Print the stack"<<endl;
   cout<<"5.To exit:";
   cin>>n;
   switch(n)
   {
    case 1:
    {
	 j=push();
	    if(j==0)
	    {
		   cout<<endl<<"Task was unsucessfull"<<endl;
	    }
	   else
	  {
		    cout<<endl<<"conplited"<<endl;
	  }
	  break;
    }
    case 2:
    {
    j=pop();
	    if(j==0)
	    {
		   cout<<endl<<"Task was unsucessfull"<<endl;
	    }
	   else
	  {
		    cout<<endl<<"conplited"<<endl;
	  }
     break;
    }
    case 4:
    {
      j=disp();
	    if(j==0)
	    {
		   cout<<endl<<"Task was unsucessfull"<<endl;
	    }
	   else
	  {
		    cout<<endl<<"conplited"<<endl;
	  }
     break;
    }

    case 5:
    {
     return 0;
    }
   }
 }
}


#include<iostream>
#define max 10
int lower[max],upper[max],top,beg,en;
using namespace std;

void quicksort(arr,n)
{

	if(n>1)
	{
		top=top+1;
		lower[top]=1;
		upper[top]=n;

	}
	while(lower[top]!=0)
	{
		beg=lower[top];
		en=upper[top];
		top=top-1;
		loc=quick(arr,beg,en);
		if(beg<loc-1)
		{
			top=top+1;
			lower[top]=beg;
			upper[top]=loc-1;

		}
		if(loc+1<en)
		{
			top=top+1;
			lower[top]=loc+1;
			upper[top]=en;
		}

	}


}
int quick(a,beg,en)
{


	int left,right,loc,n;
	left=loc=beg;
	right=en;
	while(arr[loc]<=arr[right]&&loc!=right)
	{
		right=right-1;

	}
	if(loc==right)
	{
		return loc;
	}
	if(arr[loc]>arr[right])
	{
		n=arr[loc];
	      arr[loc]=arr[right];
	      arr[right]=n;
	      loc=right;
	}
	while(arr[left]<=arr[loc]&&left!=loc)
	{
		left=left+1;
	}
	if(loc==left)
	{
		return loc;
	}
	if(arr[left]>arr[loc])
	{
		n=arr[loc];
	      arr[loc]=arr[left];
	      arr[left]=n;
	      loc=left;
	}
	return 0;

}

int main()
{
	int n,i,arr[10];

 cout<<"Enter the number of elements";
 cin>>n;
 for(i=1;i<=n;i++)
 {
 	cout<<"Enter the number";
 	cin>>arr[i];


 }
 qicksort(arr,n);
 for(i=0;i<=n;i++)
 {
 	cout<<"Element is "<<arr[i];
 }

}


